// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GamebotAPI.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace bytedance.lab.gamebot {

  /// <summary>Holder for reflection information generated from GamebotAPI.proto</summary>
  public static partial class GamebotAPIReflection {

    #region Descriptor
    /// <summary>File descriptor for GamebotAPI.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GamebotAPIReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBHYW1lYm90QVBJLnByb3RvEhJHYW1lYm90QVBJUHJvdG9jb2witgEKB1Jl",
            "cXVlc3QSPgoMcmVzdGFydF9nYW1lGAEgASgLMiYuR2FtZWJvdEFQSVByb3Rv",
            "Y29sLlJlcXVlc3RSZXN0YXJ0R2FtZUgAEi8KBHN0ZXAYAiABKAsyHy5HYW1l",
            "Ym90QVBJUHJvdG9jb2wuUmVxdWVzdFN0ZXBIABIvCgRxdWl0GAMgASgLMh8u",
            "R2FtZWJvdEFQSVByb3RvY29sLlJlcXVlc3RRdWl0SABCCQoHcmVxdWVzdCK7",
            "AQoIUmVzcG9uc2USPwoMcmVzdGFydF9nYW1lGAEgASgLMicuR2FtZWJvdEFQ",
            "SVByb3RvY29sLlJlc3BvbnNlUmVzdGFydEdhbWVIABIwCgRzdGVwGAIgASgL",
            "MiAuR2FtZWJvdEFQSVByb3RvY29sLlJlc3BvbnNlU3RlcEgAEjAKBHF1aXQY",
            "AyABKAsyIC5HYW1lYm90QVBJUHJvdG9jb2wuUmVzcG9uc2VRdWl0SABCCgoI",
            "cmVzcG9uc2UiDQoLUmVxdWVzdFF1aXQiDgoMUmVzcG9uc2VRdWl0IjwKElJl",
            "cXVlc3RSZXN0YXJ0R2FtZRImCgRpbml0GAEgASgLMhguR2FtZWJvdEFQSVBy",
            "b3RvY29sLkluaXQiFQoTUmVzcG9uc2VSZXN0YXJ0R2FtZSJDCgtSZXF1ZXN0",
            "U3RlcBImCgRoZXJvGAEgASgLMhguR2FtZWJvdEFQSVByb3RvY29sLkhlcm8S",
            "DAoEZG9uZRgCIAEoCCI6CgxSZXNwb25zZVN0ZXASKgoGYWN0aW9uGAEgASgL",
            "MhouR2FtZWJvdEFQSVByb3RvY29sLkFjdGlvbiIGCgRJbml0Ip8BCgRIZXJv",
            "EgoKAmhwGAEgASgCEg4KBmVuZXJneRgCIAEoAhIJCgF4GAMgASgCEgkKAXkY",
            "BCABKAISCQoBehgFIAEoAhISCgpyb3RhdGlvbl94GAYgASgCEhIKCnJvdGF0",
            "aW9uX3kYByABKAISEgoKcm90YXRpb25fehgIIAEoAhIQCghyYXlfY2FzdBgJ",
            "IAMoAhIMCgRraWxsGAogASgFIkcKBkFjdGlvbhIMCgRtb3ZlGAEgASgFEg0K",
            "BXNob290GAIgASgIEg8KB21vdXNlX3gYAyABKAISDwoHbW91c2VfeRgEIAEo",
            "AkIYqgIVYnl0ZWRhbmNlLmxhYi5nYW1lYm90YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::bytedance.lab.gamebot.Request), global::bytedance.lab.gamebot.Request.Parser, new[]{ "RestartGame", "Step", "Quit" }, new[]{ "Request" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bytedance.lab.gamebot.Response), global::bytedance.lab.gamebot.Response.Parser, new[]{ "RestartGame", "Step", "Quit" }, new[]{ "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bytedance.lab.gamebot.RequestQuit), global::bytedance.lab.gamebot.RequestQuit.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bytedance.lab.gamebot.ResponseQuit), global::bytedance.lab.gamebot.ResponseQuit.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bytedance.lab.gamebot.RequestRestartGame), global::bytedance.lab.gamebot.RequestRestartGame.Parser, new[]{ "Init" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bytedance.lab.gamebot.ResponseRestartGame), global::bytedance.lab.gamebot.ResponseRestartGame.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bytedance.lab.gamebot.RequestStep), global::bytedance.lab.gamebot.RequestStep.Parser, new[]{ "Hero", "Done" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bytedance.lab.gamebot.ResponseStep), global::bytedance.lab.gamebot.ResponseStep.Parser, new[]{ "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bytedance.lab.gamebot.Init), global::bytedance.lab.gamebot.Init.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bytedance.lab.gamebot.Hero), global::bytedance.lab.gamebot.Hero.Parser, new[]{ "Hp", "Energy", "X", "Y", "Z", "RotationX", "RotationY", "RotationZ", "RayCast", "Kill" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bytedance.lab.gamebot.Action), global::bytedance.lab.gamebot.Action.Parser, new[]{ "Move", "Shoot", "MouseX", "MouseY" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bytedance.lab.gamebot.GamebotAPIReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      switch (other.RequestCase) {
        case RequestOneofCase.RestartGame:
          RestartGame = other.RestartGame.Clone();
          break;
        case RequestOneofCase.Step:
          Step = other.Step.Clone();
          break;
        case RequestOneofCase.Quit:
          Quit = other.Quit.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "restart_game" field.</summary>
    public const int RestartGameFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bytedance.lab.gamebot.RequestRestartGame RestartGame {
      get { return requestCase_ == RequestOneofCase.RestartGame ? (global::bytedance.lab.gamebot.RequestRestartGame) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.RestartGame;
      }
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bytedance.lab.gamebot.RequestStep Step {
      get { return requestCase_ == RequestOneofCase.Step ? (global::bytedance.lab.gamebot.RequestStep) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Step;
      }
    }

    /// <summary>Field number for the "quit" field.</summary>
    public const int QuitFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bytedance.lab.gamebot.RequestQuit Quit {
      get { return requestCase_ == RequestOneofCase.Quit ? (global::bytedance.lab.gamebot.RequestQuit) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Quit;
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      RestartGame = 1,
      Step = 2,
      Quit = 3,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RestartGame, other.RestartGame)) return false;
      if (!object.Equals(Step, other.Step)) return false;
      if (!object.Equals(Quit, other.Quit)) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestCase_ == RequestOneofCase.RestartGame) hash ^= RestartGame.GetHashCode();
      if (requestCase_ == RequestOneofCase.Step) hash ^= Step.GetHashCode();
      if (requestCase_ == RequestOneofCase.Quit) hash ^= Quit.GetHashCode();
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (requestCase_ == RequestOneofCase.RestartGame) {
        output.WriteRawTag(10);
        output.WriteMessage(RestartGame);
      }
      if (requestCase_ == RequestOneofCase.Step) {
        output.WriteRawTag(18);
        output.WriteMessage(Step);
      }
      if (requestCase_ == RequestOneofCase.Quit) {
        output.WriteRawTag(26);
        output.WriteMessage(Quit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestCase_ == RequestOneofCase.RestartGame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RestartGame);
      }
      if (requestCase_ == RequestOneofCase.Step) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Step);
      }
      if (requestCase_ == RequestOneofCase.Quit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      switch (other.RequestCase) {
        case RequestOneofCase.RestartGame:
          if (RestartGame == null) {
            RestartGame = new global::bytedance.lab.gamebot.RequestRestartGame();
          }
          RestartGame.MergeFrom(other.RestartGame);
          break;
        case RequestOneofCase.Step:
          if (Step == null) {
            Step = new global::bytedance.lab.gamebot.RequestStep();
          }
          Step.MergeFrom(other.Step);
          break;
        case RequestOneofCase.Quit:
          if (Quit == null) {
            Quit = new global::bytedance.lab.gamebot.RequestQuit();
          }
          Quit.MergeFrom(other.Quit);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::bytedance.lab.gamebot.RequestRestartGame subBuilder = new global::bytedance.lab.gamebot.RequestRestartGame();
            if (requestCase_ == RequestOneofCase.RestartGame) {
              subBuilder.MergeFrom(RestartGame);
            }
            input.ReadMessage(subBuilder);
            RestartGame = subBuilder;
            break;
          }
          case 18: {
            global::bytedance.lab.gamebot.RequestStep subBuilder = new global::bytedance.lab.gamebot.RequestStep();
            if (requestCase_ == RequestOneofCase.Step) {
              subBuilder.MergeFrom(Step);
            }
            input.ReadMessage(subBuilder);
            Step = subBuilder;
            break;
          }
          case 26: {
            global::bytedance.lab.gamebot.RequestQuit subBuilder = new global::bytedance.lab.gamebot.RequestQuit();
            if (requestCase_ == RequestOneofCase.Quit) {
              subBuilder.MergeFrom(Quit);
            }
            input.ReadMessage(subBuilder);
            Quit = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bytedance.lab.gamebot.GamebotAPIReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      switch (other.ResponseCase) {
        case ResponseOneofCase.RestartGame:
          RestartGame = other.RestartGame.Clone();
          break;
        case ResponseOneofCase.Step:
          Step = other.Step.Clone();
          break;
        case ResponseOneofCase.Quit:
          Quit = other.Quit.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "restart_game" field.</summary>
    public const int RestartGameFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bytedance.lab.gamebot.ResponseRestartGame RestartGame {
      get { return responseCase_ == ResponseOneofCase.RestartGame ? (global::bytedance.lab.gamebot.ResponseRestartGame) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.RestartGame;
      }
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bytedance.lab.gamebot.ResponseStep Step {
      get { return responseCase_ == ResponseOneofCase.Step ? (global::bytedance.lab.gamebot.ResponseStep) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Step;
      }
    }

    /// <summary>Field number for the "quit" field.</summary>
    public const int QuitFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bytedance.lab.gamebot.ResponseQuit Quit {
      get { return responseCase_ == ResponseOneofCase.Quit ? (global::bytedance.lab.gamebot.ResponseQuit) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Quit;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      RestartGame = 1,
      Step = 2,
      Quit = 3,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RestartGame, other.RestartGame)) return false;
      if (!object.Equals(Step, other.Step)) return false;
      if (!object.Equals(Quit, other.Quit)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.RestartGame) hash ^= RestartGame.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Step) hash ^= Step.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Quit) hash ^= Quit.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseCase_ == ResponseOneofCase.RestartGame) {
        output.WriteRawTag(10);
        output.WriteMessage(RestartGame);
      }
      if (responseCase_ == ResponseOneofCase.Step) {
        output.WriteRawTag(18);
        output.WriteMessage(Step);
      }
      if (responseCase_ == ResponseOneofCase.Quit) {
        output.WriteRawTag(26);
        output.WriteMessage(Quit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.RestartGame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RestartGame);
      }
      if (responseCase_ == ResponseOneofCase.Step) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Step);
      }
      if (responseCase_ == ResponseOneofCase.Quit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.RestartGame:
          if (RestartGame == null) {
            RestartGame = new global::bytedance.lab.gamebot.ResponseRestartGame();
          }
          RestartGame.MergeFrom(other.RestartGame);
          break;
        case ResponseOneofCase.Step:
          if (Step == null) {
            Step = new global::bytedance.lab.gamebot.ResponseStep();
          }
          Step.MergeFrom(other.Step);
          break;
        case ResponseOneofCase.Quit:
          if (Quit == null) {
            Quit = new global::bytedance.lab.gamebot.ResponseQuit();
          }
          Quit.MergeFrom(other.Quit);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::bytedance.lab.gamebot.ResponseRestartGame subBuilder = new global::bytedance.lab.gamebot.ResponseRestartGame();
            if (responseCase_ == ResponseOneofCase.RestartGame) {
              subBuilder.MergeFrom(RestartGame);
            }
            input.ReadMessage(subBuilder);
            RestartGame = subBuilder;
            break;
          }
          case 18: {
            global::bytedance.lab.gamebot.ResponseStep subBuilder = new global::bytedance.lab.gamebot.ResponseStep();
            if (responseCase_ == ResponseOneofCase.Step) {
              subBuilder.MergeFrom(Step);
            }
            input.ReadMessage(subBuilder);
            Step = subBuilder;
            break;
          }
          case 26: {
            global::bytedance.lab.gamebot.ResponseQuit subBuilder = new global::bytedance.lab.gamebot.ResponseQuit();
            if (responseCase_ == ResponseOneofCase.Quit) {
              subBuilder.MergeFrom(Quit);
            }
            input.ReadMessage(subBuilder);
            Quit = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestQuit : pb::IMessage<RequestQuit> {
    private static readonly pb::MessageParser<RequestQuit> _parser = new pb::MessageParser<RequestQuit>(() => new RequestQuit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestQuit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bytedance.lab.gamebot.GamebotAPIReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestQuit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestQuit(RequestQuit other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestQuit Clone() {
      return new RequestQuit(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestQuit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestQuit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestQuit other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ResponseQuit : pb::IMessage<ResponseQuit> {
    private static readonly pb::MessageParser<ResponseQuit> _parser = new pb::MessageParser<ResponseQuit>(() => new ResponseQuit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseQuit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bytedance.lab.gamebot.GamebotAPIReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseQuit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseQuit(ResponseQuit other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseQuit Clone() {
      return new ResponseQuit(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseQuit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseQuit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseQuit other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 只传输初始化的一些信息
  /// </summary>
  public sealed partial class RequestRestartGame : pb::IMessage<RequestRestartGame> {
    private static readonly pb::MessageParser<RequestRestartGame> _parser = new pb::MessageParser<RequestRestartGame>(() => new RequestRestartGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestRestartGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bytedance.lab.gamebot.GamebotAPIReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRestartGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRestartGame(RequestRestartGame other) : this() {
      init_ = other.init_ != null ? other.init_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRestartGame Clone() {
      return new RequestRestartGame(this);
    }

    /// <summary>Field number for the "init" field.</summary>
    public const int InitFieldNumber = 1;
    private global::bytedance.lab.gamebot.Init init_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bytedance.lab.gamebot.Init Init {
      get { return init_; }
      set {
        init_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestRestartGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestRestartGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Init, other.Init)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (init_ != null) hash ^= Init.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (init_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Init);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (init_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Init);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestRestartGame other) {
      if (other == null) {
        return;
      }
      if (other.init_ != null) {
        if (init_ == null) {
          Init = new global::bytedance.lab.gamebot.Init();
        }
        Init.MergeFrom(other.Init);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (init_ == null) {
              Init = new global::bytedance.lab.gamebot.Init();
            }
            input.ReadMessage(Init);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseRestartGame : pb::IMessage<ResponseRestartGame> {
    private static readonly pb::MessageParser<ResponseRestartGame> _parser = new pb::MessageParser<ResponseRestartGame>(() => new ResponseRestartGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseRestartGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bytedance.lab.gamebot.GamebotAPIReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseRestartGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseRestartGame(ResponseRestartGame other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseRestartGame Clone() {
      return new ResponseRestartGame(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseRestartGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseRestartGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseRestartGame other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class RequestStep : pb::IMessage<RequestStep> {
    private static readonly pb::MessageParser<RequestStep> _parser = new pb::MessageParser<RequestStep>(() => new RequestStep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestStep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bytedance.lab.gamebot.GamebotAPIReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestStep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestStep(RequestStep other) : this() {
      hero_ = other.hero_ != null ? other.hero_.Clone() : null;
      done_ = other.done_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestStep Clone() {
      return new RequestStep(this);
    }

    /// <summary>Field number for the "hero" field.</summary>
    public const int HeroFieldNumber = 1;
    private global::bytedance.lab.gamebot.Hero hero_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bytedance.lab.gamebot.Hero Hero {
      get { return hero_; }
      set {
        hero_ = value;
      }
    }

    /// <summary>Field number for the "done" field.</summary>
    public const int DoneFieldNumber = 2;
    private bool done_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Done {
      get { return done_; }
      set {
        done_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestStep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestStep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hero, other.Hero)) return false;
      if (Done != other.Done) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hero_ != null) hash ^= Hero.GetHashCode();
      if (Done != false) hash ^= Done.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hero_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hero);
      }
      if (Done != false) {
        output.WriteRawTag(16);
        output.WriteBool(Done);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hero_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hero);
      }
      if (Done != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestStep other) {
      if (other == null) {
        return;
      }
      if (other.hero_ != null) {
        if (hero_ == null) {
          Hero = new global::bytedance.lab.gamebot.Hero();
        }
        Hero.MergeFrom(other.Hero);
      }
      if (other.Done != false) {
        Done = other.Done;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hero_ == null) {
              Hero = new global::bytedance.lab.gamebot.Hero();
            }
            input.ReadMessage(Hero);
            break;
          }
          case 16: {
            Done = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseStep : pb::IMessage<ResponseStep> {
    private static readonly pb::MessageParser<ResponseStep> _parser = new pb::MessageParser<ResponseStep>(() => new ResponseStep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseStep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bytedance.lab.gamebot.GamebotAPIReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStep(ResponseStep other) : this() {
      action_ = other.action_ != null ? other.action_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStep Clone() {
      return new ResponseStep(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private global::bytedance.lab.gamebot.Action action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bytedance.lab.gamebot.Action Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseStep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseStep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Action, other.Action)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (action_ != null) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (action_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (action_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseStep other) {
      if (other == null) {
        return;
      }
      if (other.action_ != null) {
        if (action_ == null) {
          Action = new global::bytedance.lab.gamebot.Action();
        }
        Action.MergeFrom(other.Action);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (action_ == null) {
              Action = new global::bytedance.lab.gamebot.Action();
            }
            input.ReadMessage(Action);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Init : pb::IMessage<Init> {
    private static readonly pb::MessageParser<Init> _parser = new pb::MessageParser<Init>(() => new Init());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Init> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bytedance.lab.gamebot.GamebotAPIReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Init() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Init(Init other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Init Clone() {
      return new Init(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Init);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Init other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Init other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Hero : pb::IMessage<Hero> {
    private static readonly pb::MessageParser<Hero> _parser = new pb::MessageParser<Hero>(() => new Hero());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hero> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bytedance.lab.gamebot.GamebotAPIReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hero() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hero(Hero other) : this() {
      hp_ = other.hp_;
      energy_ = other.energy_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      rotationX_ = other.rotationX_;
      rotationY_ = other.rotationY_;
      rotationZ_ = other.rotationZ_;
      rayCast_ = other.rayCast_.Clone();
      kill_ = other.kill_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hero Clone() {
      return new Hero(this);
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 1;
    private float hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "energy" field.</summary>
    public const int EnergyFieldNumber = 2;
    private float energy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Energy {
      get { return energy_; }
      set {
        energy_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 3;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 4;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 5;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "rotation_x" field.</summary>
    public const int RotationXFieldNumber = 6;
    private float rotationX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotationX {
      get { return rotationX_; }
      set {
        rotationX_ = value;
      }
    }

    /// <summary>Field number for the "rotation_y" field.</summary>
    public const int RotationYFieldNumber = 7;
    private float rotationY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotationY {
      get { return rotationY_; }
      set {
        rotationY_ = value;
      }
    }

    /// <summary>Field number for the "rotation_z" field.</summary>
    public const int RotationZFieldNumber = 8;
    private float rotationZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotationZ {
      get { return rotationZ_; }
      set {
        rotationZ_ = value;
      }
    }

    /// <summary>Field number for the "ray_cast" field.</summary>
    public const int RayCastFieldNumber = 9;
    private static readonly pb::FieldCodec<float> _repeated_rayCast_codec
        = pb::FieldCodec.ForFloat(74);
    private readonly pbc::RepeatedField<float> rayCast_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> RayCast {
      get { return rayCast_; }
    }

    /// <summary>Field number for the "kill" field.</summary>
    public const int KillFieldNumber = 10;
    private int kill_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Kill {
      get { return kill_; }
      set {
        kill_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hero);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hero other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Hp, other.Hp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Energy, other.Energy)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotationX, other.RotationX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotationY, other.RotationY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotationZ, other.RotationZ)) return false;
      if(!rayCast_.Equals(other.rayCast_)) return false;
      if (Kill != other.Kill) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Hp);
      if (Energy != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Energy);
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (RotationX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotationX);
      if (RotationY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotationY);
      if (RotationZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotationZ);
      hash ^= rayCast_.GetHashCode();
      if (Kill != 0) hash ^= Kill.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Hp != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Hp);
      }
      if (Energy != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Energy);
      }
      if (X != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Z);
      }
      if (RotationX != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(RotationX);
      }
      if (RotationY != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(RotationY);
      }
      if (RotationZ != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(RotationZ);
      }
      rayCast_.WriteTo(output, _repeated_rayCast_codec);
      if (Kill != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Kill);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hp != 0F) {
        size += 1 + 4;
      }
      if (Energy != 0F) {
        size += 1 + 4;
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (RotationX != 0F) {
        size += 1 + 4;
      }
      if (RotationY != 0F) {
        size += 1 + 4;
      }
      if (RotationZ != 0F) {
        size += 1 + 4;
      }
      size += rayCast_.CalculateSize(_repeated_rayCast_codec);
      if (Kill != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kill);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hero other) {
      if (other == null) {
        return;
      }
      if (other.Hp != 0F) {
        Hp = other.Hp;
      }
      if (other.Energy != 0F) {
        Energy = other.Energy;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.RotationX != 0F) {
        RotationX = other.RotationX;
      }
      if (other.RotationY != 0F) {
        RotationY = other.RotationY;
      }
      if (other.RotationZ != 0F) {
        RotationZ = other.RotationZ;
      }
      rayCast_.Add(other.rayCast_);
      if (other.Kill != 0) {
        Kill = other.Kill;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Hp = input.ReadFloat();
            break;
          }
          case 21: {
            Energy = input.ReadFloat();
            break;
          }
          case 29: {
            X = input.ReadFloat();
            break;
          }
          case 37: {
            Y = input.ReadFloat();
            break;
          }
          case 45: {
            Z = input.ReadFloat();
            break;
          }
          case 53: {
            RotationX = input.ReadFloat();
            break;
          }
          case 61: {
            RotationY = input.ReadFloat();
            break;
          }
          case 69: {
            RotationZ = input.ReadFloat();
            break;
          }
          case 74:
          case 77: {
            rayCast_.AddEntriesFrom(input, _repeated_rayCast_codec);
            break;
          }
          case 80: {
            Kill = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Action : pb::IMessage<Action> {
    private static readonly pb::MessageParser<Action> _parser = new pb::MessageParser<Action>(() => new Action());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Action> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bytedance.lab.gamebot.GamebotAPIReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action(Action other) : this() {
      move_ = other.move_;
      shoot_ = other.shoot_;
      mouseX_ = other.mouseX_;
      mouseY_ = other.mouseY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action Clone() {
      return new Action(this);
    }

    /// <summary>Field number for the "move" field.</summary>
    public const int MoveFieldNumber = 1;
    private int move_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Move {
      get { return move_; }
      set {
        move_ = value;
      }
    }

    /// <summary>Field number for the "shoot" field.</summary>
    public const int ShootFieldNumber = 2;
    private bool shoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Shoot {
      get { return shoot_; }
      set {
        shoot_ = value;
      }
    }

    /// <summary>Field number for the "mouse_x" field.</summary>
    public const int MouseXFieldNumber = 3;
    private float mouseX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MouseX {
      get { return mouseX_; }
      set {
        mouseX_ = value;
      }
    }

    /// <summary>Field number for the "mouse_y" field.</summary>
    public const int MouseYFieldNumber = 4;
    private float mouseY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MouseY {
      get { return mouseY_; }
      set {
        mouseY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Action);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Action other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Move != other.Move) return false;
      if (Shoot != other.Shoot) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MouseX, other.MouseX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MouseY, other.MouseY)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Move != 0) hash ^= Move.GetHashCode();
      if (Shoot != false) hash ^= Shoot.GetHashCode();
      if (MouseX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MouseX);
      if (MouseY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MouseY);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Move != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Move);
      }
      if (Shoot != false) {
        output.WriteRawTag(16);
        output.WriteBool(Shoot);
      }
      if (MouseX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MouseX);
      }
      if (MouseY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MouseY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Move != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Move);
      }
      if (Shoot != false) {
        size += 1 + 1;
      }
      if (MouseX != 0F) {
        size += 1 + 4;
      }
      if (MouseY != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Action other) {
      if (other == null) {
        return;
      }
      if (other.Move != 0) {
        Move = other.Move;
      }
      if (other.Shoot != false) {
        Shoot = other.Shoot;
      }
      if (other.MouseX != 0F) {
        MouseX = other.MouseX;
      }
      if (other.MouseY != 0F) {
        MouseY = other.MouseY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Move = input.ReadInt32();
            break;
          }
          case 16: {
            Shoot = input.ReadBool();
            break;
          }
          case 29: {
            MouseX = input.ReadFloat();
            break;
          }
          case 37: {
            MouseY = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
